scalar Date

type Empleado implements Usuario {
  id: ID
  empleado: Empleado
  nombre: String!
  apellido: String!
  email: String
  numeroTelefono: String
  password: String!
  activo: Boolean
  createdAt: Date
  updatedAt: Date   

  estacion: Estacion!
  horaEntrada: String
  horaSalida: String
  rol: RolEmpleado
}

enum RolEmpleado {
  BARBERO
  RECEPCIONISTA
}

type Query {
  empleados: [Empleado]!
  empleado(id: Int!): Empleado
}

type Mutation {
  createEmpleado(createEmpleadoInput: CreateEmpleadoInput!): Empleado!
  updateEmpleado(updateEmpleadoInput: UpdateEmpleadoInput!): Empleado!
  removeEmpleado(id: Int!): Empleado
}

input CreateEmpleadoInput {
  nombre: String!
  apellido: String!
  email: String!
  numeroTelefono: String
  password: String!
  
  estacion: UpdateEstacionInput
  horaEntrada: String
  horaSalida: String
  rol: RolEmpleado!
}

input UpdateEmpleadoInput {
  id: ID!
  nombre: String
  apellido: String
  email: String
  numeroTelefono: String
  password: String
  estacion: UpdateEstacionInput
  horaEntrada: String
  horaSalida: String
  rol: RolEmpleado
  activo: Boolean
}