// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Evento {
  id             Int        @id @default(autoincrement())
  estatus        EstatusEvento 
  nombreCliente  String
  estacion       Estacion   @relation(fields:[estacionId], references: [id])
  estacionId     Int        @unique
  createdAt      DateTime   @default(now())
  updatedAt      DateTime
}

enum EstatusEvento {
  EN_PROGRESO
  TERMINADO
  PAGADO
  CANCELADO
}

model Estacion {
  id             Int        @id @default(autoincrement())
  numero         Int        @unique
  evento         Evento[]
  disponible     Boolean    @default(true)
  empleado       Empleado   @relation(fields: [empleadoId], references: [id])
  empleadoId     Int        @unique
  createdAt      DateTime   @default(now())
  updatedAt      DateTime
}

model Empleado {
  id             Int        @id @default(autoincrement())
  usuario        Usuario    @relation(fields: [usuarioId], references: [id])
  usuarioId      Int        @unique
  estacion       Estacion?
  horaEntrada    DateTime?
  horaSalida     DateTime?
  rol            RolEmpleado
  createdAt      DateTime   @default(now())
  updatedAt      DateTime
}

enum RolEmpleado {
  BARBERO
  RECEPCIONISTA
}

model Usuario {
  id             Int        @id @default(autoincrement())
  empleado       Empleado?
  nombre         String
  apellido       String
  email          String     @unique
  numeroTelefono String?    @unique
  password       String
  activo         Boolean    @default(true)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   
}
