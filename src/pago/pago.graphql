scalar Date

type Pago {
  id: ID!
  factura: Factura!
  comision: Float
  montoRecibido: Float
  montoDevuelto: Float
  metodoPago: MetodoDePago!
  estatus: EstatusPago!
  createdAt: Date!
  updatedAt: Date!
}

enum MetodoDePago {
  EFECTIVO
  TARJETA_CREDITO
  TARJETA_DEBITO
}

enum EstatusPago {
  REALIZADO
  PENDIENTE
}

input CreatePagoInput {
  facturaId: String!
  comision: Float
  montoRecibido: Float!
  montoDevuelto: Float
  metodoPago: MetodoDePago!
}

input UpdatePagoInput {
  id: String!
  factura: UpdateFacturaInput
  comision: Float
  montoRecibido: Float
  montoDevuelto: Float
  metodoPago: MetodoDePago
}

type Query {
  pagos: [Pago]!
  pago( id: String!): Pago
}

type Mutation {
  createPago(createPagoInput: CreatePagoInput!): Pago!
  updatePago(updatePagoInput: UpdatePagoInput!): Pago!
  removePago( id: String!): Pago
}
