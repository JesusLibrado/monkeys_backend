scalar Date

type ConceptoFactura {
  id: ID!
  factura: Factura!
  cantidad: Int!
  producto: Producto
  servicio: Servicio
  total: Float!
  createdAt: Date!
  updatedAt: Date!
}

input CreateConceptoFacturaInput {
  factura: UpdateFacturaInput!
  cantidad: Int!
  producto: UpdateProductoInput
  servicio: UpdateServicioInput
}

input CreateConceptoFacturaInputWithServicio {
  factura: UpdateFacturaInput!
  cantidad: Int!
  servicio: CreateServicioInput
}

input UpdateConceptoFacturaInput {
  id: Int!
  cantidad: Int
  producto: UpdateProductoInput
  servicio: UpdateServicioInput
}

input UpdateConceptoFacturaInputWithServicio {
  id: Int!
  cantidad: Int
  servicio: CreateServicioInput
}

type Query {
  conceptoFacturas: [ConceptoFactura]!
  conceptoFactura(id: Int!): ConceptoFactura
}

type Mutation {
  createConceptoFactura(createConceptoFacturaInput: CreateConceptoFacturaInput!): ConceptoFactura!
  updateConceptoFactura(updateConceptoFacturaInput: UpdateConceptoFacturaInput!): ConceptoFactura!
  removeConceptoFactura(id: Int!): ConceptoFactura
}
